import * as React from 'react';
import SearchIcon from '@mui/icons-material/Search';
import ArrowDropUpOutlinedIcon from '@mui/icons-material/ArrowDropUpOutlined';
import ShoppingCartOutlinedIcon from '@mui/icons-material/ShoppingCartOutlined';
import ArrowDropDownOutlinedIcon from '@mui/icons-material/ArrowDropDownOutlined';
import CandlestickChartOutlinedIcon from '@mui/icons-material/CandlestickChartOutlined';
import FormatListBulletedOutlinedIcon from '@mui/icons-material/FormatListBulletedOutlined';
import { Avatar, Paper, InputBase, InputAdornment, Menu, MenuItem, IconButton, List, ListItem, ListItemAvatar, ListSubheader, ListItemText, Button } from '@mui/material';
import ManageSearchOutlinedIcon from '@mui/icons-material/ManageSearchOutlined';

const messages = [
    {
      id: 1,
      primary: 'Brunch this week?',
      secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: '/static/images/avatar/5.jpg',
    },
    {
      id: 2,
      primary: 'Birthday Gift',
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it. 
        Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 3,
      primary: 'Recipe to try',
      secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
      person: '/static/images/avatar/2.jpg',
    },
    {
      id: 4,
      primary: 'Yes!',
      secondary: 'I have the tickets to the ReactConf for this year.',
      person: '/static/images/avatar/3.jpg',
    },
    {
      id: 5,
      primary: "Doctor's Appointment",
      secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
      person: '/static/images/avatar/4.jpg',
    },
    {
      id: 6,
      primary: 'Discussion',
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: '/static/images/avatar/5.jpg',
    },
    {
      id: 7,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 8,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 9,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 10,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 11,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 12,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
  ];


export default function Search() {
    const [search, setSearch] = React.useState("");
    const [category, setCategory] = React.useState("all");
    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);
    const open = Boolean(anchorEl);

    const handleClick = (event: React.MouseEvent<HTMLElement>) => {
        setAnchorEl(event.currentTarget);
    };

    const handleClose = (value: string) => {
        setCategory(value)
        setAnchorEl(null);
    };
    const searchText = () => {
        console.log("api call for " + search + " and " + category )
    }

    return (
        <>
            <Paper
                component="form"
                sx={{ p: '2px 4px', display: 'flex', alignItems: 'center' }}
                >
                <InputBase
                    startAdornment={
                        <InputAdornment position="end" color="primary">
                            {/* <Button
                                onClick={handleClick}
                                size="small"
                                aria-controls={open ? 'account-menu' : undefined}
                                aria-haspopup="true"
                                aria-expanded={open ? 'true' : undefined}
                            >
                            <>
                                { 
                                    
                                    category === "all" ? <CandlestickChartOutlinedIcon fontSize='small' /> :
                                    category === "shopping" ? <ShoppingCartOutlinedIcon fontSize='small' /> :
                                    <FormatListBulletedOutlinedIcon fontSize='small' sx={{ marginRight: "20px" }} />
                                }
                                {
                                    open ? <ArrowDropUpOutlinedIcon /> : <ArrowDropDownOutlinedIcon />
                                }
                            </>
                            </Button>
                            <Menu
                                anchorEl={anchorEl}
                                onClose={() => setAnchorEl(null)}
                                id="account-menu"
                                open={open}
                                variant='selectedMenu'
                                PaperProps={{
                                    elevation: 0,
                                    sx: {
                                        overflow: 'visible',
                                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',
                                        mt: 1.5,
                                        '& .MuiAvatar-root': {
                                        width: 32,
                                        height: 32,
                                        ml: -0.5,
                                        mr: 1,
                                        },
                                        '&:before': {
                                        content: '""',
                                        display: 'block',
                                        position: 'absolute',
                                        top: 0,
                                        left: 15,
                                        width: 10,
                                        height: 10,
                                        bgcolor: 'background.paper',
                                        transform: 'translateY(-50%) rotate(45deg)',
                                        zIndex: 0,
                                        fontSize: '1rem'
                                        },
                                    },
                                    }}
                                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}
                                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
                                >
                                <MenuItem onClick={() => handleClose('all')} selected={category === 'all'} sx={{fontSize: ".8rem"}}>
                                    <CandlestickChartOutlinedIcon fontSize="small" sx={{pr: 1}} />ALL
                                </MenuItem>
                                <MenuItem onClick={() => handleClose('shopping')} selected={category === 'shopping'} sx={{fontSize: ".8rem"}}>
                                    <ShoppingCartOutlinedIcon fontSize="small" sx={{pr: 1}} /> Shopping
                                </MenuItem>
                                <MenuItem onClick={() => handleClose('todo')} selected={category === 'todo'} sx={{fontSize: ".8rem"}}>
                                    <FormatListBulletedOutlinedIcon fontSize="small" sx={{pr: 1}} /> ToDo
                                </MenuItem>
                            </Menu> */}
                            <InputAdornment position="end" color="primary">
                              <ManageSearchOutlinedIcon fontSize='small' sx={{ marginRight: "20px" }} />
                          </InputAdornment>
                        </InputAdornment>
                    }
                    autoFocus
                    sx={{ ml: 1, flex: 1 }}
                    placeholder="Search..."
                    inputProps={{ 'aria-label': 'search' }}
                    value={search}
                    onChange={(event: any) => setSearch(event.target?.value)}
                    onKeyDown={(ev) => {
                        if (ev.key === 'Enter') {
                            searchText()
                            ev.preventDefault();
                        }
                    }}
                />
                <IconButton type="button" sx={{ p: '10px' }} aria-label="search" disabled={!search} onClick={searchText}>
                    <SearchIcon color='secondary' />
                </IconButton>
            </Paper>
            <List sx={{ mb: 2 }}>
                {messages.map(({ id, primary, secondary, person }) => (
                <React.Fragment key={id}>
                    {id === 1 && (
                    <ListSubheader sx={{ zIndex: '1'}}>
                        Today
                    </ListSubheader>
                    )}
                    {id === 5 && (
                    <ListSubheader sx={{ zIndex: '1'}}>
                        Yesterday
                    </ListSubheader>
                    )}
                    <ListItem key={id}>
                        <ListItemAvatar>
                            <Avatar src={primary[0]} variant="rounded" />
                        </ListItemAvatar>
                        <ListItemText primary={primary} secondary={secondary} secondaryTypographyProps={{
                          display: "block",
                          maxHeight: "2.4rem",
                          lineHeight: "1.2rem",
                          overflow: "hidden"
                        }} />
                    </ListItem>
                </React.Fragment>
                ))}
            </List>
        </>
    );
}